name: Upload to PyPI

on:
  push:
    branches:
      - publish_with_poetry
  release:
    types: [published]

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Bootstrap poetry
      run: |
        curl -sL https://install.python-poetry.org | python - -y ${{ matrix.bootstrap-args }}
    - name: Configure poetry
      run: poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: timeout 10s poetry run pip --version || rm -rf .venv
    - name: Install dependencies
      run: poetry install
    - name: Build project
      run: poetry build
    - name: Configure Test PyPI Repository
      run: |
        poetry config repositories.pypi-test https://test.pypi.org/legacy/
        poetry config pypi-token.pypi-test ${{ secrets.PYPI_TOKEN }}
    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: poetry publish -r pypi-test
